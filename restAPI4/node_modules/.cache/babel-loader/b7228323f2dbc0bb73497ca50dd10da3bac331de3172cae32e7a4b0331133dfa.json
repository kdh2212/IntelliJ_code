{"ast":null,"code":"import \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport \"core-js/modules/web.structured-clone.js\";\nimport { Fragment as _Fragment, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\"; // Composables\nimport { useLocale } from \"../../composables/index.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, ref, toRaw, watchEffect } from 'vue';\nimport { deepEqual, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVConfirmEditProps = propsFactory({\n  modelValue: null,\n  color: String,\n  cancelText: {\n    type: String,\n    \"default\": '$vuetify.confirmEdit.cancel'\n  },\n  okText: {\n    type: String,\n    \"default\": '$vuetify.confirmEdit.ok'\n  }\n}, 'VConfirmEdit');\nexport var VConfirmEdit = genericComponent()({\n  name: 'VConfirmEdit',\n  props: makeVConfirmEditProps(),\n  emits: {\n    cancel: function cancel() {\n      return true;\n    },\n    save: function save(value) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots;\n    var model = useProxiedModel(props, 'modelValue');\n    var internalModel = ref();\n    watchEffect(function () {\n      internalModel.value = structuredClone(toRaw(model.value));\n    });\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var isPristine = computed(function () {\n      return deepEqual(model.value, internalModel.value);\n    });\n    function save() {\n      model.value = internalModel.value;\n      emit('save', internalModel.value);\n    }\n    function cancel() {\n      internalModel.value = structuredClone(toRaw(model.value));\n      emit('cancel');\n    }\n    function actions(actionsProps) {\n      return _createVNode(_Fragment, null, [_createVNode(VBtn, _mergeProps({\n        \"disabled\": isPristine.value,\n        \"variant\": \"text\",\n        \"color\": props.color,\n        \"onClick\": cancel,\n        \"text\": t(props.cancelText)\n      }, actionsProps), null), _createVNode(VBtn, _mergeProps({\n        \"disabled\": isPristine.value,\n        \"variant\": \"text\",\n        \"color\": props.color,\n        \"onClick\": save,\n        \"text\": t(props.okText)\n      }, actionsProps), null)]);\n    }\n    var actionsUsed = false;\n    useRender(function () {\n      var _slots$default;\n      return _createVNode(_Fragment, null, [(_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, {\n        model: internalModel,\n        save: save,\n        cancel: cancel,\n        isPristine: isPristine.value,\n        get actions() {\n          actionsUsed = true;\n          return actions;\n        }\n      }), !actionsUsed && actions()]);\n    });\n    return {\n      save: save,\n      cancel: cancel,\n      isPristine: isPristine\n    };\n  }\n});","map":{"version":3,"names":["VBtn","useLocale","useProxiedModel","computed","ref","toRaw","watchEffect","deepEqual","genericComponent","propsFactory","useRender","makeVConfirmEditProps","modelValue","color","String","cancelText","type","okText","VConfirmEdit","name","props","emits","cancel","save","value","updateModelValue","setup","_ref","emit","slots","model","internalModel","structuredClone","_useLocale","t","isPristine","actions","actionsProps","_createVNode","_Fragment","_mergeProps","actionsUsed","_slots$default","call"],"sources":["../../../src/components/VConfirmEdit/VConfirmEdit.tsx"],"sourcesContent":["// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { useLocale } from '@/composables'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, ref, toRaw, watchEffect } from 'vue'\nimport { deepEqual, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Ref, VNode } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport type VConfirmEditSlots<T> = {\n  default: {\n    model: Ref<T>\n    save: () => void\n    cancel: () => void\n    isPristine: boolean\n    get actions (): (props?: {}) => VNode\n  }\n}\n\nexport const makeVConfirmEditProps = propsFactory({\n  modelValue: null,\n  color: String,\n  cancelText: {\n    type: String,\n    default: '$vuetify.confirmEdit.cancel',\n  },\n  okText: {\n    type: String,\n    default: '$vuetify.confirmEdit.ok',\n  },\n}, 'VConfirmEdit')\n\nexport const VConfirmEdit = genericComponent<new <T> (\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n    'onSave'?: (value: T) => void\n  },\n  slots: VConfirmEditSlots<T>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VConfirmEdit',\n\n  props: makeVConfirmEditProps(),\n\n  emits: {\n    cancel: () => true,\n    save: (value: any) => true,\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const internalModel = ref()\n    watchEffect(() => {\n      internalModel.value = structuredClone(toRaw(model.value))\n    })\n\n    const { t } = useLocale()\n\n    const isPristine = computed(() => {\n      return deepEqual(model.value, internalModel.value)\n    })\n\n    function save () {\n      model.value = internalModel.value\n      emit('save', internalModel.value)\n    }\n\n    function cancel () {\n      internalModel.value = structuredClone(toRaw(model.value))\n      emit('cancel')\n    }\n\n    function actions (actionsProps?: {}) {\n      return (\n        <>\n          <VBtn\n            disabled={ isPristine.value }\n            variant=\"text\"\n            color={ props.color }\n            onClick={ cancel }\n            text={ t(props.cancelText) }\n            { ...actionsProps }\n          />\n\n          <VBtn\n            disabled={ isPristine.value }\n            variant=\"text\"\n            color={ props.color }\n            onClick={ save }\n            text={ t(props.okText) }\n            { ...actionsProps }\n          />\n        </>\n      )\n    }\n\n    let actionsUsed = false\n    useRender(() => {\n      return (\n        <>\n          {\n            slots.default?.({\n              model: internalModel,\n              save,\n              cancel,\n              isPristine: isPristine.value,\n              get actions () {\n                actionsUsed = true\n                return actions\n              },\n            })\n          }\n\n          { !actionsUsed && actions() }\n        </>\n      )\n    })\n\n    return {\n      save,\n      cancel,\n      isPristine,\n    }\n  },\n})\n\nexport type VConfirmEdit = InstanceType<typeof VConfirmEdit>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}