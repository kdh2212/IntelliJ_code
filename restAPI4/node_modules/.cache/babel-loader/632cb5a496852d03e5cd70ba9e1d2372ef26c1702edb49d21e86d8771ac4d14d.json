{"ast":null,"code":"import _regeneratorRuntime from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { createTextVNode as _createTextVNode, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VInfiniteScroll.css\";\n\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\";\nimport { VProgressCircular } from \"../VProgressCircular/index.mjs\"; // Composables\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { computed, nextTick, onMounted, ref, shallowRef, watch } from 'vue';\nimport { convertToUnit, defineComponent, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVInfiniteScrollProps = propsFactory(_objectSpread(_objectSpread({\n  color: String,\n  direction: {\n    type: String,\n    \"default\": 'vertical',\n    validator: function validator(v) {\n      return ['vertical', 'horizontal'].includes(v);\n    }\n  },\n  side: {\n    type: String,\n    \"default\": 'end',\n    validator: function validator(v) {\n      return ['start', 'end', 'both'].includes(v);\n    }\n  },\n  mode: {\n    type: String,\n    \"default\": 'intersect',\n    validator: function validator(v) {\n      return ['intersect', 'manual'].includes(v);\n    }\n  },\n  margin: [Number, String],\n  loadMoreText: {\n    type: String,\n    \"default\": '$vuetify.infiniteScroll.loadMore'\n  },\n  emptyText: {\n    type: String,\n    \"default\": '$vuetify.infiniteScroll.empty'\n  }\n}, makeDimensionProps()), makeTagProps()), 'VInfiniteScroll');\nexport var VInfiniteScrollIntersect = defineComponent({\n  name: 'VInfiniteScrollIntersect',\n  props: {\n    side: {\n      type: String,\n      required: true\n    },\n    rootMargin: String\n  },\n  emits: {\n    intersect: function intersect(side, isIntersecting) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var _useIntersectionObser = useIntersectionObserver(),\n      intersectionRef = _useIntersectionObser.intersectionRef,\n      isIntersecting = _useIntersectionObser.isIntersecting;\n    watch(isIntersecting, /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(val) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              emit('intersect', props.side, val);\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    useRender(function () {\n      return _createVNode(\"div\", {\n        \"class\": \"v-infinite-scroll-intersect\",\n        \"style\": {\n          '--v-infinite-margin-size': props.rootMargin\n        },\n        \"ref\": intersectionRef\n      }, [_createTextVNode(\"\\xA0\")]);\n    });\n    return {};\n  }\n});\nexport var VInfiniteScroll = genericComponent()({\n  name: 'VInfiniteScroll',\n  props: makeVInfiniteScrollProps(),\n  emits: {\n    load: function load(options) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref2) {\n    var slots = _ref2.slots,\n      emit = _ref2.emit;\n    var rootEl = ref();\n    var startStatus = shallowRef('ok');\n    var endStatus = shallowRef('ok');\n    var margin = computed(function () {\n      return convertToUnit(props.margin);\n    });\n    var isIntersecting = shallowRef(false);\n    function setScrollAmount(amount) {\n      if (!rootEl.value) return;\n      var property = props.direction === 'vertical' ? 'scrollTop' : 'scrollLeft';\n      rootEl.value[property] = amount;\n    }\n    function getScrollAmount() {\n      if (!rootEl.value) return 0;\n      var property = props.direction === 'vertical' ? 'scrollTop' : 'scrollLeft';\n      return rootEl.value[property];\n    }\n    function getScrollSize() {\n      if (!rootEl.value) return 0;\n      var property = props.direction === 'vertical' ? 'scrollHeight' : 'scrollWidth';\n      return rootEl.value[property];\n    }\n    function getContainerSize() {\n      if (!rootEl.value) return 0;\n      var property = props.direction === 'vertical' ? 'clientHeight' : 'clientWidth';\n      return rootEl.value[property];\n    }\n    onMounted(function () {\n      if (!rootEl.value) return;\n      if (props.side === 'start') {\n        setScrollAmount(getScrollSize());\n      } else if (props.side === 'both') {\n        setScrollAmount(getScrollSize() / 2 - getContainerSize() / 2);\n      }\n    });\n    function setStatus(side, status) {\n      if (side === 'start') {\n        startStatus.value = status;\n      } else if (side === 'end') {\n        endStatus.value = status;\n      }\n    }\n    function getStatus(side) {\n      return side === 'start' ? startStatus.value : endStatus.value;\n    }\n    var previousScrollSize = 0;\n    function handleIntersect(side, _isIntersecting) {\n      isIntersecting.value = _isIntersecting;\n      if (isIntersecting.value) {\n        intersecting(side);\n      }\n    }\n    function intersecting(side) {\n      if (props.mode !== 'manual' && !isIntersecting.value) return;\n      var status = getStatus(side);\n      if (!rootEl.value || ['empty', 'loading'].includes(status)) return;\n      previousScrollSize = getScrollSize();\n      setStatus(side, 'loading');\n      function done(status) {\n        setStatus(side, status);\n        nextTick(function () {\n          if (status === 'empty' || status === 'error') return;\n          if (status === 'ok' && side === 'start') {\n            setScrollAmount(getScrollSize() - previousScrollSize + getScrollAmount());\n          }\n          if (props.mode !== 'manual') {\n            nextTick(function () {\n              window.requestAnimationFrame(function () {\n                window.requestAnimationFrame(function () {\n                  window.requestAnimationFrame(function () {\n                    intersecting(side);\n                  });\n                });\n              });\n            });\n          }\n        });\n      }\n      emit('load', {\n        side: side,\n        done: done\n      });\n    }\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    function renderSide(side, status) {\n      var _slots$error, _slots$empty, _slots$empty2, _slots$loading3, _slots$loading4;\n      if (props.side !== side && props.side !== 'both') return;\n      var onClick = function onClick() {\n        return intersecting(side);\n      };\n      var slotProps = {\n        side: side,\n        props: {\n          onClick: onClick,\n          color: props.color\n        }\n      };\n      if (status === 'error') return (_slots$error = slots.error) === null || _slots$error === void 0 ? void 0 : _slots$error.call(slots, slotProps);\n      if (status === 'empty') return (_slots$empty = (_slots$empty2 = slots.empty) === null || _slots$empty2 === void 0 ? void 0 : _slots$empty2.call(slots, slotProps)) !== null && _slots$empty !== void 0 ? _slots$empty : _createVNode(\"div\", null, [t(props.emptyText)]);\n      if (props.mode === 'manual') {\n        var _slots$loadMore, _slots$loadMore2;\n        if (status === 'loading') {\n          var _slots$loading, _slots$loading2;\n          return (_slots$loading = (_slots$loading2 = slots.loading) === null || _slots$loading2 === void 0 ? void 0 : _slots$loading2.call(slots, slotProps)) !== null && _slots$loading !== void 0 ? _slots$loading : _createVNode(VProgressCircular, {\n            \"indeterminate\": true,\n            \"color\": props.color\n          }, null);\n        }\n        return (_slots$loadMore = (_slots$loadMore2 = slots['load-more']) === null || _slots$loadMore2 === void 0 ? void 0 : _slots$loadMore2.call(slots, slotProps)) !== null && _slots$loadMore !== void 0 ? _slots$loadMore : _createVNode(VBtn, {\n          \"variant\": \"outlined\",\n          \"color\": props.color,\n          \"onClick\": onClick\n        }, {\n          \"default\": function _default() {\n            return [t(props.loadMoreText)];\n          }\n        });\n      }\n      return (_slots$loading3 = (_slots$loading4 = slots.loading) === null || _slots$loading4 === void 0 ? void 0 : _slots$loading4.call(slots, slotProps)) !== null && _slots$loading3 !== void 0 ? _slots$loading3 : _createVNode(VProgressCircular, {\n        \"indeterminate\": true,\n        \"color\": props.color\n      }, null);\n    }\n    var _useDimension = useDimension(props),\n      dimensionStyles = _useDimension.dimensionStyles;\n    useRender(function () {\n      var Tag = props.tag;\n      var hasStartIntersect = props.side === 'start' || props.side === 'both';\n      var hasEndIntersect = props.side === 'end' || props.side === 'both';\n      var intersectMode = props.mode === 'intersect';\n      return _createVNode(Tag, {\n        \"ref\": rootEl,\n        \"class\": ['v-infinite-scroll', \"v-infinite-scroll--\".concat(props.direction), {\n          'v-infinite-scroll--start': hasStartIntersect,\n          'v-infinite-scroll--end': hasEndIntersect\n        }],\n        \"style\": dimensionStyles.value\n      }, {\n        \"default\": function _default() {\n          var _slots$default;\n          return [_createVNode(\"div\", {\n            \"class\": \"v-infinite-scroll__side\"\n          }, [renderSide('start', startStatus.value)]), hasStartIntersect && intersectMode && _createVNode(VInfiniteScrollIntersect, {\n            \"key\": \"start\",\n            \"side\": \"start\",\n            \"onIntersect\": handleIntersect,\n            \"rootMargin\": margin.value\n          }, null), (_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots), hasEndIntersect && intersectMode && _createVNode(VInfiniteScrollIntersect, {\n            \"key\": \"end\",\n            \"side\": \"end\",\n            \"onIntersect\": handleIntersect,\n            \"rootMargin\": margin.value\n          }, null), _createVNode(\"div\", {\n            \"class\": \"v-infinite-scroll__side\"\n          }, [renderSide('end', endStatus.value)])];\n        }\n      });\n    });\n  }\n});","map":{"version":3,"names":["VBtn","VProgressCircular","makeDimensionProps","useDimension","useIntersectionObserver","useLocale","makeTagProps","computed","nextTick","onMounted","ref","shallowRef","watch","convertToUnit","defineComponent","genericComponent","propsFactory","useRender","makeVInfiniteScrollProps","_objectSpread","color","String","direction","type","validator","v","includes","side","mode","margin","Number","loadMoreText","emptyText","VInfiniteScrollIntersect","name","props","required","rootMargin","emits","intersect","isIntersecting","setup","_ref","emit","_useIntersectionObser","intersectionRef","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","val","wrap","_callee$","_context","prev","next","stop","_x","apply","arguments","_createVNode","_createTextVNode","VInfiniteScroll","load","options","_ref2","slots","rootEl","startStatus","endStatus","setScrollAmount","amount","value","property","getScrollAmount","getScrollSize","getContainerSize","setStatus","status","getStatus","previousScrollSize","handleIntersect","_isIntersecting","intersecting","done","window","requestAnimationFrame","_useLocale","t","renderSide","_slots$error","_slots$empty","_slots$empty2","_slots$loading3","_slots$loading4","onClick","slotProps","error","call","empty","_slots$loadMore","_slots$loadMore2","_slots$loading","_slots$loading2","loading","default","_useDimension","dimensionStyles","Tag","tag","hasStartIntersect","hasEndIntersect","intersectMode","concat","_slots$default"],"sources":["../../../src/components/VInfiniteScroll/VInfiniteScroll.tsx"],"sourcesContent":["// Styles\nimport './VInfiniteScroll.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\nimport { VProgressCircular } from '@/components/VProgressCircular'\n\n// Composables\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useLocale } from '@/composables/locale'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, nextTick, onMounted, ref, shallowRef, watch } from 'vue'\nimport { convertToUnit, defineComponent, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport type InfiniteScrollSide = 'start' | 'end' | 'both'\nexport type InfiniteScrollStatus = 'ok' | 'empty' | 'loading' | 'error'\n\ntype InfiniteScrollSlot = {\n  side: InfiniteScrollSide\n  props: Record<string, any>\n}\n\ntype VInfiniteScrollSlots = {\n  default: never\n  loading: InfiniteScrollSlot\n  error: InfiniteScrollSlot\n  empty: InfiniteScrollSlot\n  'load-more': InfiniteScrollSlot\n}\n\nexport const makeVInfiniteScrollProps = propsFactory({\n  color: String,\n  direction: {\n    type: String as PropType<'vertical' | 'horizontal'>,\n    default: 'vertical',\n    validator: (v: any) => ['vertical', 'horizontal'].includes(v),\n  },\n  side: {\n    type: String as PropType<InfiniteScrollSide>,\n    default: 'end',\n    validator: (v: any) => ['start', 'end', 'both'].includes(v),\n  },\n  mode: {\n    type: String as PropType<'intersect' | 'manual'>,\n    default: 'intersect',\n    validator: (v: any) => ['intersect', 'manual'].includes(v),\n  },\n  margin: [Number, String],\n  loadMoreText: {\n    type: String,\n    default: '$vuetify.infiniteScroll.loadMore',\n  },\n  emptyText: {\n    type: String,\n    default: '$vuetify.infiniteScroll.empty',\n  },\n\n  ...makeDimensionProps(),\n  ...makeTagProps(),\n}, 'VInfiniteScroll')\n\nexport const VInfiniteScrollIntersect = defineComponent({\n  name: 'VInfiniteScrollIntersect',\n\n  props: {\n    side: {\n      type: String as PropType<InfiniteScrollSide>,\n      required: true,\n    },\n    rootMargin: String,\n  },\n\n  emits: {\n    intersect: (side: InfiniteScrollSide, isIntersecting: boolean) => true,\n  },\n\n  setup (props, { emit }) {\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n\n    watch(isIntersecting, async val => {\n      emit('intersect', props.side, val)\n    })\n\n    useRender(() => (\n      <div\n        class=\"v-infinite-scroll-intersect\"\n        style={{\n          '--v-infinite-margin-size': props.rootMargin,\n        }}\n        ref={ intersectionRef }\n      >&nbsp;</div>\n    ))\n\n    return {}\n  },\n})\n\nexport const VInfiniteScroll = genericComponent<VInfiniteScrollSlots>()({\n  name: 'VInfiniteScroll',\n\n  props: makeVInfiniteScrollProps(),\n\n  emits: {\n    load: (options: { side: InfiniteScrollSide, done: (status: InfiniteScrollStatus) => void }) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const rootEl = ref<HTMLDivElement>()\n    const startStatus = shallowRef<InfiniteScrollStatus>('ok')\n    const endStatus = shallowRef<InfiniteScrollStatus>('ok')\n    const margin = computed(() => convertToUnit(props.margin))\n    const isIntersecting = shallowRef(false)\n\n    function setScrollAmount (amount: number) {\n      if (!rootEl.value) return\n\n      const property = props.direction === 'vertical' ? 'scrollTop' : 'scrollLeft'\n      rootEl.value[property] = amount\n    }\n\n    function getScrollAmount () {\n      if (!rootEl.value) return 0\n\n      const property = props.direction === 'vertical' ? 'scrollTop' : 'scrollLeft'\n      return rootEl.value[property]\n    }\n\n    function getScrollSize () {\n      if (!rootEl.value) return 0\n\n      const property = props.direction === 'vertical' ? 'scrollHeight' : 'scrollWidth'\n      return rootEl.value[property]\n    }\n\n    function getContainerSize () {\n      if (!rootEl.value) return 0\n\n      const property = props.direction === 'vertical' ? 'clientHeight' : 'clientWidth'\n      return rootEl.value[property]\n    }\n\n    onMounted(() => {\n      if (!rootEl.value) return\n\n      if (props.side === 'start') {\n        setScrollAmount(getScrollSize())\n      } else if (props.side === 'both') {\n        setScrollAmount(getScrollSize() / 2 - getContainerSize() / 2)\n      }\n    })\n\n    function setStatus (side: InfiniteScrollSide, status: InfiniteScrollStatus) {\n      if (side === 'start') {\n        startStatus.value = status\n      } else if (side === 'end') {\n        endStatus.value = status\n      }\n    }\n\n    function getStatus (side: string) {\n      return side === 'start' ? startStatus.value : endStatus.value\n    }\n\n    let previousScrollSize = 0\n    function handleIntersect (side: InfiniteScrollSide, _isIntersecting: boolean) {\n      isIntersecting.value = _isIntersecting\n      if (isIntersecting.value) {\n        intersecting(side)\n      }\n    }\n\n    function intersecting (side: InfiniteScrollSide) {\n      if (props.mode !== 'manual' && !isIntersecting.value) return\n\n      const status = getStatus(side)\n      if (!rootEl.value || ['empty', 'loading'].includes(status)) return\n\n      previousScrollSize = getScrollSize()\n      setStatus(side, 'loading')\n\n      function done (status: InfiniteScrollStatus) {\n        setStatus(side, status)\n\n        nextTick(() => {\n          if (status === 'empty' || status === 'error') return\n\n          if (status === 'ok' && side === 'start') {\n            setScrollAmount(getScrollSize() - previousScrollSize + getScrollAmount())\n          }\n          if (props.mode !== 'manual') {\n            nextTick(() => {\n              window.requestAnimationFrame(() => {\n                window.requestAnimationFrame(() => {\n                  window.requestAnimationFrame(() => {\n                    intersecting(side)\n                  })\n                })\n              })\n            })\n          }\n        })\n      }\n\n      emit('load', { side, done })\n    }\n\n    const { t } = useLocale()\n\n    function renderSide (side: InfiniteScrollSide, status: InfiniteScrollStatus) {\n      if (props.side !== side && props.side !== 'both') return\n\n      const onClick = () => intersecting(side)\n      const slotProps = { side, props: { onClick, color: props.color } }\n\n      if (status === 'error') return slots.error?.(slotProps)\n\n      if (status === 'empty') return slots.empty?.(slotProps) ?? <div>{ t(props.emptyText) }</div>\n\n      if (props.mode === 'manual') {\n        if (status === 'loading') {\n          return slots.loading?.(slotProps) ?? (\n            <VProgressCircular indeterminate color={ props.color } />\n          )\n        }\n\n        return slots['load-more']?.(slotProps) ?? (\n          <VBtn variant=\"outlined\" color={ props.color } onClick={ onClick }>\n            { t(props.loadMoreText) }\n          </VBtn>\n        )\n      }\n\n      return slots.loading?.(slotProps) ?? (\n        <VProgressCircular indeterminate color={ props.color } />\n      )\n    }\n\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => {\n      const Tag = props.tag\n      const hasStartIntersect = props.side === 'start' || props.side === 'both'\n      const hasEndIntersect = props.side === 'end' || props.side === 'both'\n      const intersectMode = props.mode === 'intersect'\n\n      return (\n        <Tag\n          ref={ rootEl }\n          class={[\n            'v-infinite-scroll',\n            `v-infinite-scroll--${props.direction}`,\n            {\n              'v-infinite-scroll--start': hasStartIntersect,\n              'v-infinite-scroll--end': hasEndIntersect,\n            },\n          ]}\n          style={ dimensionStyles.value }\n        >\n          <div class=\"v-infinite-scroll__side\">\n            { renderSide('start', startStatus.value) }\n          </div>\n\n          { hasStartIntersect && intersectMode && (\n            <VInfiniteScrollIntersect\n              key=\"start\"\n              side=\"start\"\n              onIntersect={ handleIntersect }\n              rootMargin={ margin.value }\n            />\n          )}\n\n          { slots.default?.() }\n\n          { hasEndIntersect && intersectMode && (\n            <VInfiniteScrollIntersect\n              key=\"end\"\n              side=\"end\"\n              onIntersect={ handleIntersect }\n              rootMargin={ margin.value }\n            />\n          )}\n\n          <div class=\"v-infinite-scroll__side\">\n            { renderSide('end', endStatus.value) }\n          </div>\n        </Tag>\n      )\n    })\n  },\n})\n\nexport type VInfiniteScroll = InstanceType<typeof VInfiniteScroll>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}