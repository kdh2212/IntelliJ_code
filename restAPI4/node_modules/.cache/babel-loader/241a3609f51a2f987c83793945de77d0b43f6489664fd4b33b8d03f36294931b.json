{"ast":null,"code":"export function calculateUpdatedTarget(_ref) {\n  var selectedElement = _ref.selectedElement,\n    containerElement = _ref.containerElement,\n    isRtl = _ref.isRtl,\n    isHorizontal = _ref.isHorizontal;\n  var containerSize = getOffsetSize(isHorizontal, containerElement);\n  var scrollPosition = getScrollPosition(isHorizontal, isRtl, containerElement);\n  var childrenSize = getOffsetSize(isHorizontal, selectedElement);\n  var childrenStartPosition = getOffsetPosition(isHorizontal, selectedElement);\n  var additionalOffset = childrenSize * 0.4;\n  if (scrollPosition > childrenStartPosition) {\n    return childrenStartPosition - additionalOffset;\n  } else if (scrollPosition + containerSize < childrenStartPosition + childrenSize) {\n    return childrenStartPosition - containerSize + childrenSize + additionalOffset;\n  }\n  return scrollPosition;\n}\nexport function calculateCenteredTarget(_ref2) {\n  var selectedElement = _ref2.selectedElement,\n    containerElement = _ref2.containerElement,\n    isHorizontal = _ref2.isHorizontal;\n  var containerOffsetSize = getOffsetSize(isHorizontal, containerElement);\n  var childrenOffsetPosition = getOffsetPosition(isHorizontal, selectedElement);\n  var childrenOffsetSize = getOffsetSize(isHorizontal, selectedElement);\n  return childrenOffsetPosition - containerOffsetSize / 2 + childrenOffsetSize / 2;\n}\nexport function getScrollSize(isHorizontal, element) {\n  var key = isHorizontal ? 'scrollWidth' : 'scrollHeight';\n  return (element === null || element === void 0 ? void 0 : element[key]) || 0;\n}\nexport function getClientSize(isHorizontal, element) {\n  var key = isHorizontal ? 'clientWidth' : 'clientHeight';\n  return (element === null || element === void 0 ? void 0 : element[key]) || 0;\n}\nexport function getScrollPosition(isHorizontal, rtl, element) {\n  if (!element) {\n    return 0;\n  }\n  var scrollLeft = element.scrollLeft,\n    offsetWidth = element.offsetWidth,\n    scrollWidth = element.scrollWidth;\n  if (isHorizontal) {\n    return rtl ? scrollWidth - offsetWidth + scrollLeft : scrollLeft;\n  }\n  return element.scrollTop;\n}\nexport function getOffsetSize(isHorizontal, element) {\n  var key = isHorizontal ? 'offsetWidth' : 'offsetHeight';\n  return (element === null || element === void 0 ? void 0 : element[key]) || 0;\n}\nexport function getOffsetPosition(isHorizontal, element) {\n  var key = isHorizontal ? 'offsetLeft' : 'offsetTop';\n  return (element === null || element === void 0 ? void 0 : element[key]) || 0;\n}","map":{"version":3,"names":["calculateUpdatedTarget","_ref","selectedElement","containerElement","isRtl","isHorizontal","containerSize","getOffsetSize","scrollPosition","getScrollPosition","childrenSize","childrenStartPosition","getOffsetPosition","additionalOffset","calculateCenteredTarget","_ref2","containerOffsetSize","childrenOffsetPosition","childrenOffsetSize","getScrollSize","element","key","getClientSize","rtl","scrollLeft","offsetWidth","scrollWidth","scrollTop"],"sources":["../../../src/components/VSlideGroup/helpers.ts"],"sourcesContent":["export function calculateUpdatedTarget ({\n  selectedElement,\n  containerElement,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const containerSize = getOffsetSize(isHorizontal, containerElement)\n  const scrollPosition = getScrollPosition(isHorizontal, isRtl, containerElement)\n\n  const childrenSize = getOffsetSize(isHorizontal, selectedElement)\n  const childrenStartPosition = getOffsetPosition(isHorizontal, selectedElement)\n\n  const additionalOffset = childrenSize * 0.4\n\n  if (scrollPosition > childrenStartPosition) {\n    return childrenStartPosition - additionalOffset\n  } else if (scrollPosition + containerSize < childrenStartPosition + childrenSize) {\n    return childrenStartPosition - containerSize + childrenSize + additionalOffset\n  }\n\n  return scrollPosition\n}\n\nexport function calculateCenteredTarget ({\n  selectedElement,\n  containerElement,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isHorizontal: boolean\n}): number {\n  const containerOffsetSize = getOffsetSize(isHorizontal, containerElement)\n  const childrenOffsetPosition = getOffsetPosition(isHorizontal, selectedElement)\n  const childrenOffsetSize = getOffsetSize(isHorizontal, selectedElement)\n\n  return childrenOffsetPosition - (containerOffsetSize / 2) + (childrenOffsetSize / 2)\n}\n\nexport function getScrollSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'scrollWidth' : 'scrollHeight'\n  return element?.[key] || 0\n}\n\nexport function getClientSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'clientWidth' : 'clientHeight'\n  return element?.[key] || 0\n}\n\nexport function getScrollPosition (isHorizontal: boolean, rtl: boolean, element?: HTMLElement) {\n  if (!element) {\n    return 0\n  }\n\n  const {\n    scrollLeft,\n    offsetWidth,\n    scrollWidth,\n  } = element\n\n  if (isHorizontal) {\n    return rtl\n      ? scrollWidth - offsetWidth + scrollLeft\n      : scrollLeft\n  }\n\n  return element.scrollTop\n}\n\nexport function getOffsetSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetWidth' : 'offsetHeight'\n  return element?.[key] || 0\n}\n\nexport function getOffsetPosition (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetLeft' : 'offsetTop'\n  return element?.[key] || 0\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}