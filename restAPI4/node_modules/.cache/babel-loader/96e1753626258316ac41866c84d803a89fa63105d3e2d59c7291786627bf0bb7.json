{"ast":null,"code":"import _toConsumableArray from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _createForOfIteratorHelper from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"selected\", \"id\"],\n  _excluded2 = [\"id\", \"selected\", \"children\"],\n  _excluded3 = [\"id\", \"selected\", \"children\"];\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/* eslint-disable sonarjs/no-identical-functions */\n// Utilities\nimport { toRaw } from 'vue';\nexport var independentSelectStrategy = function independentSelectStrategy(mandatory) {\n  var strategy = {\n    select: function select(_ref) {\n      var id = _ref.id,\n        value = _ref.value,\n        selected = _ref.selected;\n      id = toRaw(id);\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value) {\n        var on = Array.from(selected.entries()).reduce(function (arr, _ref2) {\n          var _ref8 = _slicedToArray(_ref2, 2),\n            key = _ref8[0],\n            value = _ref8[1];\n          if (value === 'on') arr.push(key);\n          return arr;\n        }, []);\n        if (on.length === 1 && on[0] === id) return selected;\n      }\n      selected.set(id, value ? 'on' : 'off');\n      return selected;\n    },\n    \"in\": function _in(v, children, parents) {\n      var map = new Map();\n      var _iterator = _createForOfIteratorHelper(v || []),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var id = _step.value;\n          strategy.select({\n            id: id,\n            value: true,\n            selected: map,\n            children: children,\n            parents: parents\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return map;\n    },\n    out: function out(v) {\n      var arr = [];\n      var _iterator2 = _createForOfIteratorHelper(v.entries()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            key = _step2$value[0],\n            value = _step2$value[1];\n          if (value === 'on') arr.push(key);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return arr;\n    }\n  };\n  return strategy;\n};\nexport var independentSingleSelectStrategy = function independentSingleSelectStrategy(mandatory) {\n  var parentStrategy = independentSelectStrategy(mandatory);\n  var strategy = {\n    select: function select(_ref3) {\n      var selected = _ref3.selected,\n        id = _ref3.id,\n        rest = _objectWithoutProperties(_ref3, _excluded);\n      id = toRaw(id);\n      var singleSelected = selected.has(id) ? new Map([[id, selected.get(id)]]) : new Map();\n      return parentStrategy.select(_objectSpread(_objectSpread({}, rest), {}, {\n        id: id,\n        selected: singleSelected\n      }));\n    },\n    \"in\": function _in(v, children, parents) {\n      if (v !== null && v !== void 0 && v.length) {\n        return parentStrategy[\"in\"](v.slice(0, 1), children, parents);\n      }\n      return new Map();\n    },\n    out: function out(v, children, parents) {\n      return parentStrategy.out(v, children, parents);\n    }\n  };\n  return strategy;\n};\nexport var leafSelectStrategy = function leafSelectStrategy(mandatory) {\n  var parentStrategy = independentSelectStrategy(mandatory);\n  var strategy = {\n    select: function select(_ref4) {\n      var id = _ref4.id,\n        selected = _ref4.selected,\n        children = _ref4.children,\n        rest = _objectWithoutProperties(_ref4, _excluded2);\n      id = toRaw(id);\n      if (children.has(id)) return selected;\n      return parentStrategy.select(_objectSpread({\n        id: id,\n        selected: selected,\n        children: children\n      }, rest));\n    },\n    \"in\": parentStrategy[\"in\"],\n    out: parentStrategy.out\n  };\n  return strategy;\n};\nexport var leafSingleSelectStrategy = function leafSingleSelectStrategy(mandatory) {\n  var parentStrategy = independentSingleSelectStrategy(mandatory);\n  var strategy = {\n    select: function select(_ref5) {\n      var id = _ref5.id,\n        selected = _ref5.selected,\n        children = _ref5.children,\n        rest = _objectWithoutProperties(_ref5, _excluded3);\n      id = toRaw(id);\n      if (children.has(id)) return selected;\n      return parentStrategy.select(_objectSpread({\n        id: id,\n        selected: selected,\n        children: children\n      }, rest));\n    },\n    \"in\": parentStrategy[\"in\"],\n    out: parentStrategy.out\n  };\n  return strategy;\n};\nexport var classicSelectStrategy = function classicSelectStrategy(mandatory) {\n  var strategy = {\n    select: function select(_ref6) {\n      var id = _ref6.id,\n        value = _ref6.value,\n        selected = _ref6.selected,\n        children = _ref6.children,\n        parents = _ref6.parents;\n      id = toRaw(id);\n      var original = new Map(selected);\n      var items = [id];\n      while (items.length) {\n        var item = items.shift();\n        selected.set(toRaw(item), value ? 'on' : 'off');\n        if (children.has(item)) {\n          items.push.apply(items, _toConsumableArray(children.get(item)));\n        }\n      }\n      var parent = toRaw(parents.get(id));\n      while (parent) {\n        var childrenIds = children.get(parent);\n        var everySelected = childrenIds.every(function (cid) {\n          return selected.get(toRaw(cid)) === 'on';\n        });\n        var noneSelected = childrenIds.every(function (cid) {\n          return !selected.has(toRaw(cid)) || selected.get(toRaw(cid)) === 'off';\n        });\n        selected.set(parent, everySelected ? 'on' : noneSelected ? 'off' : 'indeterminate');\n        parent = toRaw(parents.get(parent));\n      }\n\n      // If mandatory and planned deselect results in no selected\n      // items then we can't do it, so return original state\n      if (mandatory && !value) {\n        var on = Array.from(selected.entries()).reduce(function (arr, _ref7) {\n          var _ref9 = _slicedToArray(_ref7, 2),\n            key = _ref9[0],\n            value = _ref9[1];\n          if (value === 'on') arr.push(key);\n          return arr;\n        }, []);\n        if (on.length === 0) return original;\n      }\n      return selected;\n    },\n    \"in\": function _in(v, children, parents) {\n      var map = new Map();\n      var _iterator3 = _createForOfIteratorHelper(v || []),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var id = _step3.value;\n          map = strategy.select({\n            id: id,\n            value: true,\n            selected: map,\n            children: children,\n            parents: parents\n          });\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return map;\n    },\n    out: function out(v, children) {\n      var arr = [];\n      var _iterator4 = _createForOfIteratorHelper(v.entries()),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            key = _step4$value[0],\n            value = _step4$value[1];\n          if (value === 'on' && !children.has(key)) arr.push(key);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return arr;\n    }\n  };\n  return strategy;\n};","map":{"version":3,"names":["toRaw","independentSelectStrategy","mandatory","strategy","select","_ref","id","value","selected","on","Array","from","entries","reduce","arr","_ref2","_ref8","_slicedToArray","key","push","length","set","in","v","children","parents","map","Map","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","out","_iterator2","_step2","_step2$value","independentSingleSelectStrategy","parentStrategy","_ref3","rest","_objectWithoutProperties","_excluded","singleSelected","has","get","_objectSpread","slice","leafSelectStrategy","_ref4","_excluded2","leafSingleSelectStrategy","_ref5","_excluded3","classicSelectStrategy","_ref6","original","items","item","shift","apply","_toConsumableArray","parent","childrenIds","everySelected","every","cid","noneSelected","_ref7","_ref9","_iterator3","_step3","_iterator4","_step4","_step4$value"],"sources":["../../../src/composables/nested/selectStrategies.ts"],"sourcesContent":["/* eslint-disable sonarjs/no-identical-functions */\n// Utilities\nimport { toRaw } from 'vue'\n\nexport type SelectStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  selected: Map<unknown, 'on' | 'off' | 'indeterminate'>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\nexport type SelectStrategyTransformInFn = (\n  v: readonly unknown[] | undefined,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\nexport type SelectStrategyTransformOutFn = (\n  v: Map<unknown, 'on' | 'off' | 'indeterminate'>,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => unknown[]\n\nexport type SelectStrategy = {\n  select: SelectStrategyFn\n  in: SelectStrategyTransformInFn\n  out: SelectStrategyTransformOutFn\n}\n\nexport const independentSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected }) => {\n      id = toRaw(id)\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries())\n          .reduce((arr, [key, value]) => {\n            if (value === 'on') arr.push(key)\n            return arr\n          }, [] as unknown[])\n        if (on.length === 1 && on[0] === id) return selected\n      }\n\n      selected.set(id, value ? 'on' : 'off')\n\n      return selected\n    },\n    in: (v, children, parents) => {\n      const map = new Map()\n\n      for (const id of (v || [])) {\n        strategy.select({\n          id,\n          value: true,\n          selected: map,\n          children,\n          parents,\n        })\n      }\n\n      return map\n    },\n    out: v => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on') arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n\nexport const independentSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ selected, id, ...rest }) => {\n      id = toRaw(id)\n      const singleSelected = selected.has(id) ? new Map([[id, selected.get(id)!]]) : new Map()\n      return parentStrategy.select({ ...rest, id, selected: singleSelected })\n    },\n    in: (v, children, parents) => {\n      if (v?.length) {\n        return parentStrategy.in(v.slice(0, 1), children, parents)\n      }\n\n      return new Map()\n    },\n    out: (v, children, parents) => {\n      return parentStrategy.out(v, children, parents)\n    },\n  }\n\n  return strategy\n}\n\nexport const leafSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const leafSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSingleSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const classicSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected, children, parents }) => {\n      id = toRaw(id)\n      const original = new Map(selected)\n\n      const items = [id]\n\n      while (items.length) {\n        const item = items.shift()!\n\n        selected.set(toRaw(item), value ? 'on' : 'off')\n\n        if (children.has(item)) {\n          items.push(...children.get(item)!)\n        }\n      }\n\n      let parent = toRaw(parents.get(id))\n\n      while (parent) {\n        const childrenIds = children.get(parent)!\n        const everySelected = childrenIds.every(cid => selected.get(toRaw(cid)) === 'on')\n        const noneSelected = childrenIds.every(cid => !selected.has(toRaw(cid)) || selected.get(toRaw(cid)) === 'off')\n\n        selected.set(parent, everySelected ? 'on' : noneSelected ? 'off' : 'indeterminate')\n\n        parent = toRaw(parents.get(parent))\n      }\n\n      // If mandatory and planned deselect results in no selected\n      // items then we can't do it, so return original state\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries())\n          .reduce((arr, [key, value]) => {\n            if (value === 'on') arr.push(key)\n            return arr\n          }, [] as unknown[])\n        if (on.length === 0) return original\n      }\n\n      return selected\n    },\n    in: (v, children, parents) => {\n      let map = new Map()\n\n      for (const id of (v || [])) {\n        map = strategy.select({\n          id,\n          value: true,\n          selected: map,\n          children,\n          parents,\n        })\n      }\n\n      return map\n    },\n    out: (v, children) => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on' && !children.has(key)) arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}