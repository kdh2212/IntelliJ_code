{"ast":null,"code":"import _objectSpread from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { createVNode as _createVNode, Fragment as _Fragment, mergeProps as _mergeProps } from \"vue\";\n// Components\nimport { VDataTableGroupHeaderRow } from \"./VDataTableGroupHeaderRow.mjs\";\nimport { VDataTableRow } from \"./VDataTableRow.mjs\"; // Composables\nimport { useExpanded } from \"./composables/expand.mjs\";\nimport { useGroupBy } from \"./composables/group.mjs\";\nimport { useHeaders } from \"./composables/headers.mjs\";\nimport { useSelection } from \"./composables/select.mjs\";\nimport { makeDisplayProps, useDisplay } from \"../../composables/display.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\"; // Utilities\nimport { Fragment, mergeProps } from 'vue';\nimport { genericComponent, getPrefixedEventHandlers, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVDataTableRowsProps = propsFactory(_objectSpread({\n  loading: [Boolean, String],\n  loadingText: {\n    type: String,\n    \"default\": '$vuetify.dataIterator.loadingText'\n  },\n  hideNoData: Boolean,\n  items: {\n    type: Array,\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  noDataText: {\n    type: String,\n    \"default\": '$vuetify.noDataText'\n  },\n  rowProps: [Object, Function],\n  cellProps: [Object, Function]\n}, makeDisplayProps()), 'VDataTableRows');\nexport var VDataTableRows = genericComponent()({\n  name: 'VDataTableRows',\n  inheritAttrs: false,\n  props: makeVDataTableRowsProps(),\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      slots = _ref.slots;\n    var _useHeaders = useHeaders(),\n      columns = _useHeaders.columns;\n    var _useExpanded = useExpanded(),\n      expandOnClick = _useExpanded.expandOnClick,\n      toggleExpand = _useExpanded.toggleExpand,\n      isExpanded = _useExpanded.isExpanded;\n    var _useSelection = useSelection(),\n      isSelected = _useSelection.isSelected,\n      toggleSelect = _useSelection.toggleSelect;\n    var _useGroupBy = useGroupBy(),\n      toggleGroup = _useGroupBy.toggleGroup,\n      isGroupOpen = _useGroupBy.isGroupOpen;\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var _useDisplay = useDisplay(props),\n      mobile = _useDisplay.mobile;\n    useRender(function () {\n      if (props.loading && (!props.items.length || slots.loading)) {\n        var _slots$loading, _slots$loading2;\n        return _createVNode(\"tr\", {\n          \"class\": \"v-data-table-rows-loading\",\n          \"key\": \"loading\"\n        }, [_createVNode(\"td\", {\n          \"colspan\": columns.value.length\n        }, [(_slots$loading = (_slots$loading2 = slots.loading) === null || _slots$loading2 === void 0 ? void 0 : _slots$loading2.call(slots)) !== null && _slots$loading !== void 0 ? _slots$loading : t(props.loadingText)])]);\n      }\n      if (!props.loading && !props.items.length && !props.hideNoData) {\n        var _slots$noData, _slots$noData2;\n        return _createVNode(\"tr\", {\n          \"class\": \"v-data-table-rows-no-data\",\n          \"key\": \"no-data\"\n        }, [_createVNode(\"td\", {\n          \"colspan\": columns.value.length\n        }, [(_slots$noData = (_slots$noData2 = slots['no-data']) === null || _slots$noData2 === void 0 ? void 0 : _slots$noData2.call(slots)) !== null && _slots$noData !== void 0 ? _slots$noData : t(props.noDataText)])]);\n      }\n      return _createVNode(_Fragment, null, [props.items.map(function (item, index) {\n        var _item$key, _slots$expandedRow;\n        if (item.type === 'group') {\n          var _slotProps = {\n            index: index,\n            item: item,\n            columns: columns.value,\n            isExpanded: isExpanded,\n            toggleExpand: toggleExpand,\n            isSelected: isSelected,\n            toggleSelect: toggleSelect,\n            toggleGroup: toggleGroup,\n            isGroupOpen: isGroupOpen\n          };\n          return slots['group-header'] ? slots['group-header'](_slotProps) : _createVNode(VDataTableGroupHeaderRow, _mergeProps({\n            \"key\": \"group-header_\".concat(item.id),\n            \"item\": item\n          }, getPrefixedEventHandlers(attrs, ':group-header', function () {\n            return _slotProps;\n          })), slots);\n        }\n        var slotProps = {\n          index: index,\n          item: item.raw,\n          internalItem: item,\n          columns: columns.value,\n          isExpanded: isExpanded,\n          toggleExpand: toggleExpand,\n          isSelected: isSelected,\n          toggleSelect: toggleSelect\n        };\n        var itemSlotProps = _objectSpread(_objectSpread({}, slotProps), {}, {\n          props: mergeProps({\n            key: \"item_\".concat((_item$key = item.key) !== null && _item$key !== void 0 ? _item$key : item.index),\n            onClick: expandOnClick.value ? function () {\n              toggleExpand(item);\n            } : undefined,\n            index: index,\n            item: item,\n            cellProps: props.cellProps,\n            mobile: mobile.value\n          }, getPrefixedEventHandlers(attrs, ':row', function () {\n            return slotProps;\n          }), typeof props.rowProps === 'function' ? props.rowProps({\n            item: slotProps.item,\n            index: slotProps.index,\n            internalItem: slotProps.internalItem\n          }) : props.rowProps)\n        });\n        return _createVNode(_Fragment, {\n          \"key\": itemSlotProps.props.key\n        }, [slots.item ? slots.item(itemSlotProps) : _createVNode(VDataTableRow, itemSlotProps.props, slots), isExpanded(item) && ((_slots$expandedRow = slots['expanded-row']) === null || _slots$expandedRow === void 0 ? void 0 : _slots$expandedRow.call(slots, slotProps))]);\n      })]);\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["VDataTableGroupHeaderRow","VDataTableRow","useExpanded","useGroupBy","useHeaders","useSelection","makeDisplayProps","useDisplay","useLocale","Fragment","mergeProps","genericComponent","getPrefixedEventHandlers","propsFactory","useRender","makeVDataTableRowsProps","_objectSpread","loading","Boolean","String","loadingText","type","hideNoData","items","Array","default","noDataText","rowProps","Object","Function","cellProps","VDataTableRows","name","inheritAttrs","props","setup","_ref","attrs","slots","_useHeaders","columns","_useExpanded","expandOnClick","toggleExpand","isExpanded","_useSelection","isSelected","toggleSelect","_useGroupBy","toggleGroup","isGroupOpen","_useLocale","t","_useDisplay","mobile","length","_slots$loading","_slots$loading2","_createVNode","value","call","_slots$noData","_slots$noData2","_Fragment","map","item","index","_item$key","_slots$expandedRow","slotProps","_mergeProps","concat","id","raw","internalItem","itemSlotProps","key","onClick","undefined"],"sources":["../../../src/components/VDataTable/VDataTableRows.tsx"],"sourcesContent":["// Components\nimport { VDataTableGroupHeaderRow } from './VDataTableGroupHeaderRow'\nimport { VDataTableRow } from './VDataTableRow'\n\n// Composables\nimport { useExpanded } from './composables/expand'\nimport { useGroupBy } from './composables/group'\nimport { useHeaders } from './composables/headers'\nimport { useSelection } from './composables/select'\nimport { makeDisplayProps, useDisplay } from '@/composables/display'\nimport { useLocale } from '@/composables/locale'\n\n// Utilities\nimport { Fragment, mergeProps } from 'vue'\nimport { genericComponent, getPrefixedEventHandlers, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { Group } from './composables/group'\nimport type { CellProps, DataTableItem, GroupHeaderSlot, ItemSlot, RowProps } from './types'\nimport type { VDataTableGroupHeaderRowSlots } from './VDataTableGroupHeaderRow'\nimport type { VDataTableRowSlots } from './VDataTableRow'\nimport type { GenericProps } from '@/util'\n\nexport type VDataTableRowsSlots<T> = VDataTableGroupHeaderRowSlots & VDataTableRowSlots<T> & {\n  item: ItemSlot<T> & { props: Record<string, any> }\n  loading: never\n  'group-header': GroupHeaderSlot\n  'no-data': never\n  'expanded-row': ItemSlot<T>\n}\n\nexport const makeVDataTableRowsProps = propsFactory({\n  loading: [Boolean, String],\n  loadingText: {\n    type: String,\n    default: '$vuetify.dataIterator.loadingText',\n  },\n  hideNoData: Boolean,\n  items: {\n    type: Array as PropType<readonly (DataTableItem | Group)[]>,\n    default: () => ([]),\n  },\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  rowProps: [Object, Function] as PropType<RowProps<any>>,\n  cellProps: [Object, Function] as PropType<CellProps<any>>,\n\n  ...makeDisplayProps(),\n}, 'VDataTableRows')\n\nexport const VDataTableRows = genericComponent<new <T>(\n  props: {\n    items?: readonly (DataTableItem<T> | Group<T>)[]\n  },\n  slots: VDataTableRowsSlots<T>,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VDataTableRows',\n\n  inheritAttrs: false,\n\n  props: makeVDataTableRowsProps(),\n\n  setup (props, { attrs, slots }) {\n    const { columns } = useHeaders()\n    const { expandOnClick, toggleExpand, isExpanded } = useExpanded()\n    const { isSelected, toggleSelect } = useSelection()\n    const { toggleGroup, isGroupOpen } = useGroupBy()\n    const { t } = useLocale()\n    const { mobile } = useDisplay(props)\n\n    useRender(() => {\n      if (props.loading && (!props.items.length || slots.loading)) {\n        return (\n          <tr\n            class=\"v-data-table-rows-loading\"\n            key=\"loading\"\n          >\n            <td colspan={ columns.value.length }>\n              { slots.loading?.() ?? t(props.loadingText) }\n            </td>\n          </tr>\n        )\n      }\n\n      if (!props.loading && !props.items.length && !props.hideNoData) {\n        return (\n          <tr\n            class=\"v-data-table-rows-no-data\"\n            key=\"no-data\"\n          >\n            <td colspan={ columns.value.length }>\n              { slots['no-data']?.() ?? t(props.noDataText) }\n            </td>\n          </tr>\n        )\n      }\n\n      return (\n        <>\n          { props.items.map((item, index) => {\n            if (item.type === 'group') {\n              const slotProps = {\n                index,\n                item,\n                columns: columns.value,\n                isExpanded,\n                toggleExpand,\n                isSelected,\n                toggleSelect,\n                toggleGroup,\n                isGroupOpen,\n              } satisfies GroupHeaderSlot\n\n              return slots['group-header'] ? slots['group-header'](slotProps) : (\n                <VDataTableGroupHeaderRow\n                  key={ `group-header_${item.id}` }\n                  item={ item }\n                  { ...getPrefixedEventHandlers(attrs, ':group-header', () => slotProps) }\n                  v-slots={ slots }\n                />\n              )\n            }\n\n            const slotProps = {\n              index,\n              item: item.raw,\n              internalItem: item,\n              columns: columns.value,\n              isExpanded,\n              toggleExpand,\n              isSelected,\n              toggleSelect,\n            } satisfies ItemSlot<any>\n\n            const itemSlotProps = {\n              ...slotProps,\n              props: mergeProps(\n                {\n                  key: `item_${item.key ?? item.index}`,\n                  onClick: expandOnClick.value ? () => {\n                    toggleExpand(item)\n                  } : undefined,\n                  index,\n                  item,\n                  cellProps: props.cellProps,\n                  mobile: mobile.value,\n                },\n                getPrefixedEventHandlers(attrs, ':row', () => slotProps),\n                typeof props.rowProps === 'function'\n                  ? props.rowProps({\n                    item: slotProps.item,\n                    index: slotProps.index,\n                    internalItem: slotProps.internalItem,\n                  })\n                  : props.rowProps,\n              ),\n            }\n\n            return (\n              <Fragment key={ itemSlotProps.props.key as string }>\n                { slots.item ? slots.item(itemSlotProps) : (\n                  <VDataTableRow\n                    { ...itemSlotProps.props }\n                    v-slots={ slots }\n                  />\n                )}\n\n                { isExpanded(item) && slots['expanded-row']?.(slotProps) }\n              </Fragment>\n            )\n          })}\n        </>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VDataTableRows = InstanceType<typeof VDataTableRows>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}