{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'UserForm',\n  data() {\n    return {\n      loading: false,\n      user: {\n        name: '',\n        email: '',\n        age: null\n      }\n    };\n  },\n  computed: {\n    isEdit() {\n      return !!this.$route.params.id;\n    }\n  },\n  async created() {\n    if (this.isEdit) {\n      await this.fetchUser();\n    }\n  },\n  methods: {\n    async fetchUser() {\n      this.loading = true;\n      try {\n        const response = await axios.get(`http://localhost:9110/api/users/${this.$route.params.id}`);\n        this.user = response.data;\n      } catch (error) {\n        console.error('Error fetching user:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async saveUser() {\n      this.loading = true;\n      try {\n        if (this.isEdit) {\n          await axios.put(`http://localhost:9110/api/users/${this.$route.params.id}`, this.user);\n        } else {\n          await axios.post('http://localhost:9110/api/users', this.user);\n        }\n        this.$router.push('/');\n      } catch (error) {\n        console.error('Error saving user:', error);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","loading","user","email","age","computed","isEdit","$route","params","id","created","fetchUser","methods","response","get","error","console","saveUser","put","post","$router","push"],"sources":["C:\\_dev3\\restAPI4\\src\\views\\UserForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-row>\r\n      <v-col>\r\n        <h2>{{ isEdit ? '사용자 수정' : '새 사용자 추가' }}</h2>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <v-form @submit.prevent=\"saveUser\" ref=\"form\">\r\n      <v-row>\r\n        <v-col cols=\"12\" md=\"6\">\r\n          <v-text-field\r\n            v-model=\"user.name\"\r\n            label=\"이름\"\r\n            required\r\n          ></v-text-field>\r\n        </v-col>\r\n        <v-col cols=\"12\" md=\"6\">\r\n          <v-text-field\r\n            v-model=\"user.email\"\r\n            label=\"이메일\"\r\n            type=\"email\"\r\n            required\r\n          ></v-text-field>\r\n        </v-col>\r\n        <v-col cols=\"12\" md=\"6\">\r\n          <v-text-field\r\n            v-model.number=\"user.age\"\r\n            label=\"나이\"\r\n            type=\"number\"\r\n            required\r\n          ></v-text-field>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <v-row>\r\n        <v-col>\r\n          <v-btn color=\"primary\" type=\"submit\" :loading=\"loading\">\r\n            저장\r\n          </v-btn>\r\n          <v-btn class=\"ml-2\" to=\"/\">\r\n            취소\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n    </v-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'UserForm',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      user: {\r\n        name: '',\r\n        email: '',\r\n        age: null\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isEdit() {\r\n      return !!this.$route.params.id\r\n    }\r\n  },\r\n  async created() {\r\n    if (this.isEdit) {\r\n      await this.fetchUser()\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUser() {\r\n      this.loading = true\r\n      try {\r\n        const response = await axios.get(`http://localhost:9110/api/users/${this.$route.params.id}`)\r\n        this.user = response.data\r\n      } catch (error) {\r\n        console.error('Error fetching user:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    async saveUser() {\r\n      this.loading = true\r\n      try {\r\n        if (this.isEdit) {\r\n          await axios.put(`http://localhost:9110/api/users/${this.$route.params.id}`, this.user)\r\n        } else {\r\n          await axios.post('http://localhost:9110/api/users', this.user)\r\n        }\r\n        this.$router.push('/')\r\n      } catch (error) {\r\n        console.error('Error saving user:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script> "],"mappings":"AAkDA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE;QACJH,IAAI,EAAE,EAAE;QACRI,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE;MACP;IACF;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAMA,CAAA,EAAG;MACP,OAAO,CAAC,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAC;IAC/B;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,IAAI,CAACJ,MAAM,EAAE;MACf,MAAM,IAAI,CAACK,SAAS,CAAC;IACvB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,SAASA,CAAA,EAAG;MAChB,IAAI,CAACV,OAAM,GAAI,IAAG;MAClB,IAAI;QACF,MAAMY,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,mCAAmC,IAAI,CAACP,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE;QAC3F,IAAI,CAACP,IAAG,GAAIW,QAAQ,CAACb,IAAG;MAC1B,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK;MAC7C,UAAU;QACR,IAAI,CAACd,OAAM,GAAI,KAAI;MACrB;IACF,CAAC;IACD,MAAMgB,QAAQA,CAAA,EAAG;MACf,IAAI,CAAChB,OAAM,GAAI,IAAG;MAClB,IAAI;QACF,IAAI,IAAI,CAACK,MAAM,EAAE;UACf,MAAMR,KAAK,CAACoB,GAAG,CAAC,mCAAmC,IAAI,CAACX,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE,EAAE,IAAI,CAACP,IAAI;QACvF,OAAO;UACL,MAAMJ,KAAK,CAACqB,IAAI,CAAC,iCAAiC,EAAE,IAAI,CAACjB,IAAI;QAC/D;QACA,IAAI,CAACkB,OAAO,CAACC,IAAI,CAAC,GAAG;MACvB,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK;MAC3C,UAAU;QACR,IAAI,CAACd,OAAM,GAAI,KAAI;MACrB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}