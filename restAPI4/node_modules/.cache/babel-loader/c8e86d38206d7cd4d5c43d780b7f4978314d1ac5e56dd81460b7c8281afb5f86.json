{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.object.create.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n// Utilities\nimport { h, mergeProps, render, resolveComponent } from 'vue';\nimport { consoleError, isObject } from \"../util/index.mjs\"; // Types\nexport function useDirectiveComponent(component, props) {\n  var concreteComponent = typeof component === 'string' ? resolveComponent(component) : component;\n  var hook = mountComponent(concreteComponent, props);\n  return {\n    mounted: hook,\n    updated: hook,\n    unmounted: function unmounted(el) {\n      render(null, el);\n    }\n  };\n}\nfunction mountComponent(component, props) {\n  return function (el, binding, vnode) {\n    var _ref, _binding$value$text, _binding$value, _ref2, _findComponentParent, _vnode$ctx;\n    var _props = typeof props === 'function' ? props(binding) : props;\n    var text = (_ref = (_binding$value$text = (_binding$value = binding.value) === null || _binding$value === void 0 ? void 0 : _binding$value.text) !== null && _binding$value$text !== void 0 ? _binding$value$text : binding.value) !== null && _ref !== void 0 ? _ref : _props === null || _props === void 0 ? void 0 : _props.text;\n    var value = isObject(binding.value) ? binding.value : {};\n\n    // Get the children from the props or directive value, or the element's children\n    var children = function children() {\n      return text !== null && text !== void 0 ? text : el.textContent;\n    };\n\n    // If vnode.ctx is the same as the instance, then we're bound to a plain element\n    // and need to find the nearest parent component instance to inherit provides from\n    var provides = (_ref2 = vnode.ctx === binding.instance.$ ? (_findComponentParent = findComponentParent(vnode, binding.instance.$)) === null || _findComponentParent === void 0 ? void 0 : _findComponentParent.provides : (_vnode$ctx = vnode.ctx) === null || _vnode$ctx === void 0 ? void 0 : _vnode$ctx.provides) !== null && _ref2 !== void 0 ? _ref2 : binding.instance.$.provides;\n    var node = h(component, mergeProps(_props, value), children);\n    node.appContext = Object.assign(Object.create(null), binding.instance.$.appContext, {\n      provides: provides\n    });\n    render(node, el);\n  };\n}\nfunction findComponentParent(vnode, root) {\n  // Walk the tree from root until we find the child vnode\n  var stack = new Set();\n  var _walk = function walk(children) {\n    var _iterator = _createForOfIteratorHelper(children),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _child$component;\n        var child = _step.value;\n        if (!child) continue;\n        if (child === vnode || child.el && vnode.el && child.el === vnode.el) {\n          return true;\n        }\n        stack.add(child);\n        var _result = void 0;\n        if (child.suspense) {\n          _result = _walk([child.ssContent]);\n        } else if (Array.isArray(child.children)) {\n          _result = _walk(child.children);\n        } else if ((_child$component = child.component) !== null && _child$component !== void 0 && _child$component.vnode) {\n          var _child$component2;\n          _result = _walk([(_child$component2 = child.component) === null || _child$component2 === void 0 ? void 0 : _child$component2.subTree]);\n        }\n        if (_result) {\n          return _result;\n        }\n        stack[\"delete\"](child);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return false;\n  };\n  if (!_walk([root.subTree])) {\n    consoleError('Could not find original vnode, component will not inherit provides');\n    return root;\n  }\n\n  // Return the first component parent\n  var result = Array.from(stack).reverse();\n  var _iterator2 = _createForOfIteratorHelper(result),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var child = _step2.value;\n      if (child.component) {\n        return child.component;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return root;\n}","map":{"version":3,"names":["h","mergeProps","render","resolveComponent","consoleError","isObject","useDirectiveComponent","component","props","concreteComponent","hook","mountComponent","mounted","updated","unmounted","el","binding","vnode","_ref","_binding$value$text","_binding$value","_ref2","_findComponentParent","_vnode$ctx","_props","text","value","children","textContent","provides","ctx","instance","$","findComponentParent","node","appContext","Object","assign","create","root","stack","Set","walk","_iterator","_createForOfIteratorHelper","_step","s","n","done","_child$component","child","add","result","suspense","ssContent","Array","isArray","_child$component2","subTree","err","e","f","from","reverse","_iterator2","_step2"],"sources":["../../src/composables/directiveComponent.ts"],"sourcesContent":["// Utilities\nimport { h, mergeProps, render, resolveComponent } from 'vue'\nimport { consoleError, isObject } from '@/util'\n\n// Types\nimport type {\n  Component,\n  ComponentInternalInstance,\n  ComponentPublicInstance,\n  ConcreteComponent,\n  DirectiveBinding,\n  ObjectDirective,\n  VNode,\n} from 'vue'\nimport type { ComponentInstance } from '@/util'\n\ntype ExcludeProps =\n  | 'v-slots'\n  | `v-slot:${string}`\n  | `on${Uppercase<string>}${string}`\n  | 'key'\n  | 'ref'\n  | 'ref_for'\n  | 'ref_key'\n  | '$children'\n\ndeclare const CustomDirectiveSymbol: unique symbol\ntype DirectiveHook<B extends DirectiveBinding> = (el: any, binding: B, vnode: VNode<any, any>, prevVNode: VNode<any, any>) => void\nexport interface CustomDirective<B extends DirectiveBinding = DirectiveBinding> {\n  created?: DirectiveHook<B>\n  beforeMount?: DirectiveHook<B>\n  mounted?: DirectiveHook<B>\n  beforeUpdate?: DirectiveHook<B>\n  updated?: DirectiveHook<B>\n  beforeUnmount?: DirectiveHook<B>\n  unmounted?: DirectiveHook<B>\n  [CustomDirectiveSymbol]: true\n}\n\nexport function useDirectiveComponent <\n  Binding extends DirectiveBinding,\n> (component: string | Component, props?: (binding: Binding) => Record<string, any>): CustomDirective<Binding>\nexport function useDirectiveComponent <\n  C extends Component,\n  Props = Omit<ComponentInstance<C>['$props'], ExcludeProps>\n> (component: string | C, props?: Record<string, any>): ObjectDirective<any, Props>\nexport function useDirectiveComponent (\n  component: string | Component,\n  props?: Record<string, any> | ((binding: DirectiveBinding) => Record<string, any>)\n): ObjectDirective | CustomDirective {\n  const concreteComponent = (typeof component === 'string'\n    ? resolveComponent(component)\n    : component) as ConcreteComponent\n\n  const hook = mountComponent(concreteComponent, props)\n\n  return {\n    mounted: hook,\n    updated: hook,\n    unmounted (el: HTMLElement) {\n      render(null, el)\n    },\n  }\n}\n\nfunction mountComponent (component: ConcreteComponent, props?: Record<string, any> | ((binding: DirectiveBinding) => Record<string, any>)) {\n  return function (el: HTMLElement, binding: DirectiveBinding, vnode: VNode) {\n    const _props = typeof props === 'function' ? props(binding) : props\n    const text = binding.value?.text ?? binding.value ?? _props?.text\n    const value = isObject(binding.value) ? binding.value : {}\n\n    // Get the children from the props or directive value, or the element's children\n    const children = () => text ?? el.textContent\n\n    // If vnode.ctx is the same as the instance, then we're bound to a plain element\n    // and need to find the nearest parent component instance to inherit provides from\n    const provides = (vnode.ctx === binding.instance!.$\n      ? findComponentParent(vnode, binding.instance!.$)?.provides\n      : vnode.ctx?.provides) ?? binding.instance!.$.provides\n\n    const node = h(component, mergeProps(_props, value), children)\n    node.appContext = Object.assign(\n      Object.create(null),\n      (binding.instance as ComponentPublicInstance).$.appContext,\n      { provides }\n    )\n\n    render(node, el)\n  }\n}\n\nfunction findComponentParent (vnode: VNode, root: ComponentInternalInstance): ComponentInternalInstance | null {\n  // Walk the tree from root until we find the child vnode\n  const stack = new Set<VNode>()\n  const walk = (children: VNode[]): boolean => {\n    for (const child of children) {\n      if (!child) continue\n\n      if (child === vnode || (child.el && vnode.el && child.el === vnode.el)) {\n        return true\n      }\n\n      stack.add(child)\n      let result\n      if (child.suspense) {\n        result = walk([child.ssContent!])\n      } else if (Array.isArray(child.children)) {\n        result = walk(child.children as VNode[])\n      } else if (child.component?.vnode) {\n        result = walk([child.component?.subTree])\n      }\n      if (result) {\n        return result\n      }\n      stack.delete(child)\n    }\n\n    return false\n  }\n  if (!walk([root.subTree])) {\n    consoleError('Could not find original vnode, component will not inherit provides')\n    return root\n  }\n\n  // Return the first component parent\n  const result = Array.from(stack).reverse()\n  for (const child of result) {\n    if (child.component) {\n      return child.component\n    }\n  }\n  return root\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}