{"ast":null,"code":"import _objectSpread from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Components\nimport { makeVBarlineProps, VBarline } from \"./VBarline.mjs\";\nimport { makeVTrendlineProps, VTrendline } from \"./VTrendline.mjs\"; // Composables\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\n// Types\n\nexport var makeVSparklineProps = propsFactory(_objectSpread(_objectSpread({\n  type: {\n    type: String,\n    \"default\": 'trend'\n  }\n}, makeVBarlineProps()), makeVTrendlineProps()), 'VSparkline');\nexport var VSparkline = genericComponent()({\n  name: 'VSparkline',\n  props: makeVSparklineProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useTextColor = useTextColor(toRef(props, 'color')),\n      textColorClasses = _useTextColor.textColorClasses,\n      textColorStyles = _useTextColor.textColorStyles;\n    var hasLabels = computed(function () {\n      return Boolean(props.showLabels || props.labels.length > 0 || !!(slots !== null && slots !== void 0 && slots.label));\n    });\n    var totalHeight = computed(function () {\n      var height = parseInt(props.height, 10);\n      if (hasLabels.value) height += parseInt(props.labelSize, 10) * 1.5;\n      return height;\n    });\n    useRender(function () {\n      var Tag = props.type === 'trend' ? VTrendline : VBarline;\n      var lineProps = props.type === 'trend' ? VTrendline.filterProps(props) : VBarline.filterProps(props);\n      return _createVNode(Tag, _mergeProps({\n        \"key\": props.type,\n        \"class\": textColorClasses.value,\n        \"style\": textColorStyles.value,\n        \"viewBox\": \"0 0 \".concat(props.width, \" \").concat(parseInt(totalHeight.value, 10))\n      }, lineProps), slots);\n    });\n  }\n});","map":{"version":3,"names":["makeVBarlineProps","VBarline","makeVTrendlineProps","VTrendline","useTextColor","computed","toRef","genericComponent","propsFactory","useRender","makeVSparklineProps","_objectSpread","type","String","VSparkline","name","props","setup","_ref","slots","_useTextColor","textColorClasses","textColorStyles","hasLabels","Boolean","showLabels","labels","length","label","totalHeight","height","parseInt","value","labelSize","Tag","lineProps","filterProps","_createVNode","_mergeProps","concat","width"],"sources":["../../../src/components/VSparkline/VSparkline.tsx"],"sourcesContent":["// Components\nimport { makeVBarlineProps, VBarline } from './VBarline'\nimport { makeVTrendlineProps, VTrendline } from './VTrendline'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// Types\n\nexport const makeVSparklineProps = propsFactory({\n  type: {\n    type: String as PropType<'trend' | 'bar'>,\n    default: 'trend',\n  },\n\n  ...makeVBarlineProps(),\n  ...makeVTrendlineProps(),\n}, 'VSparkline')\n\nexport type VSparklineSlots = {\n  default: void\n  label: { index: number, value: string }\n}\n\nexport const VSparkline = genericComponent<VSparklineSlots>()({\n  name: 'VSparkline',\n\n  props: makeVSparklineProps(),\n\n  setup (props, { slots }) {\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const hasLabels = computed(() => {\n      return Boolean(\n        props.showLabels ||\n        props.labels.length > 0 ||\n        !!slots?.label\n      )\n    })\n    const totalHeight = computed(() => {\n      let height = parseInt(props.height, 10)\n\n      if (hasLabels.value) height += parseInt(props.labelSize, 10) * 1.5\n\n      return height\n    })\n\n    useRender(() => {\n      const Tag = props.type === 'trend' ? VTrendline : VBarline\n      const lineProps = props.type === 'trend' ? VTrendline.filterProps(props) : VBarline.filterProps(props)\n\n      return (\n        <Tag\n          key={ props.type }\n          class={ textColorClasses.value }\n          style={ textColorStyles.value }\n          viewBox={ `0 0 ${props.width} ${parseInt(totalHeight.value, 10)}` }\n          { ...lineProps }\n          v-slots={ slots }\n        />\n      )\n    })\n  },\n})\n\nexport type VSparkline = InstanceType<typeof VSparkline>\n"],"mappings":";;;;AAAA;AAAA,SACSA,iBAAiB,EAAEC,QAAQ;AAAA,SAC3BC,mBAAmB,EAAEC,UAAU,4BAExC;AAAA,SACSC,YAAY,uCAErB;AACA,SAASC,QAAQ,EAAEC,KAAK,QAAQ,KAAK;AAAA,SAC5BC,gBAAgB,EAAEC,YAAY,EAAEC,SAAS,gCAElD;AAGA;;AAEA,OAAO,IAAMC,mBAAmB,GAAGF,YAAY,CAAAG,aAAA,CAAAA,aAAA;EAC7CC,IAAI,EAAE;IACJA,IAAI,EAAEC,MAAmC;IACzC,WAAS;EACX;AAAC,GAEEb,iBAAiB,CAAC,CAAC,GACnBE,mBAAmB,CAAC,IACtB,YAAY,CAAC;AAOhB,OAAO,IAAMY,UAAU,GAAGP,gBAAgB,CAAkB,CAAC,CAAC;EAC5DQ,IAAI,EAAE,YAAY;EAElBC,KAAK,EAAEN,mBAAmB,CAAC,CAAC;EAE5BO,KAAK,WAALA,KAAKA,CAAED,KAAK,EAAAE,IAAA,EAAa;IAAA,IAATC,KAAA,GAAOD,IAAA,CAAPC,KAAA;IACd,IAAAC,aAAA,GAA8ChB,YAAY,CAACE,KAAK,CAACU,KAAK,EAAE,OAAO,CAAC,CAAC;MAAzEK,gBAAgB,GAAAD,aAAA,CAAhBC,gBAAgB;MAAEC,eAAA,GAAAF,aAAA,CAAAE,eAAA;IAC1B,IAAMC,SAAS,GAAGlB,QAAQ,CAAC,YAAM;MAC/B,OAAOmB,OAAO,CACZR,KAAK,CAACS,UAAU,IAChBT,KAAK,CAACU,MAAM,CAACC,MAAM,GAAG,CAAC,IACvB,CAAC,EAACR,KAAK,aAALA,KAAK,eAALA,KAAK,CAAES,KACX,EAAC;IACH,CAAC,CAAC;IACF,IAAMC,WAAW,GAAGxB,QAAQ,CAAC,YAAM;MACjC,IAAIyB,MAAM,GAAGC,QAAQ,CAACf,KAAK,CAACc,MAAM,EAAE,EAAE,CAAC;MAEvC,IAAIP,SAAS,CAACS,KAAK,EAAEF,MAAM,IAAIC,QAAQ,CAACf,KAAK,CAACiB,SAAS,EAAE,EAAE,CAAC,GAAG,GAAG;MAElE,OAAOH,MAAM;IACf,CAAC,CAAC;IAEFrB,SAAS,CAAC,YAAM;MACd,IAAMyB,GAAG,GAAGlB,KAAK,CAACJ,IAAI,KAAK,OAAO,GAAGT,UAAU,GAAGF,QAAQ;MAC1D,IAAMkC,SAAS,GAAGnB,KAAK,CAACJ,IAAI,KAAK,OAAO,GAAGT,UAAU,CAACiC,WAAW,CAACpB,KAAK,CAAC,GAAGf,QAAQ,CAACmC,WAAW,CAACpB,KAAK,CAAC;MAEtG,OAAAqB,YAAA,CAAAH,GAAA,EAAAI,WAAA;QAAA,OAEUtB,KAAK,CAACJ,IAAI;QAAA,SACRS,gBAAgB,CAACW,KAAK;QAAA,SACtBV,eAAe,CAACU,KAAK;QAAA,kBAAAO,MAAA,CACZvB,KAAK,CAACwB,KAAK,OAAAD,MAAA,CAAIR,QAAQ,CAACF,WAAW,CAACG,KAAK,EAAE,EAAE,CAAC;MAAE,GAC5DG,SAAS,GACJhB,KAAK;IAGrB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}