{"ast":null,"code":"import _objectSpread from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _createForOfIteratorHelper from \"C:/_dev3/restAPI4/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar _excluded = [\"activated\", \"id\"],\n  _excluded2 = [\"id\", \"activated\", \"children\"],\n  _excluded3 = [\"id\", \"activated\", \"children\"];\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/* eslint-disable sonarjs/no-identical-functions */\n// Utilities\nimport { toRaw } from 'vue';\nimport { wrapInArray } from \"../../util/index.mjs\";\nexport var independentActiveStrategy = function independentActiveStrategy(mandatory) {\n  var strategy = {\n    activate: function activate(_ref) {\n      var id = _ref.id,\n        value = _ref.value,\n        activated = _ref.activated;\n      id = toRaw(id);\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value && activated.size === 1 && activated.has(id)) return activated;\n      if (value) {\n        activated.add(id);\n      } else {\n        activated[\"delete\"](id);\n      }\n      return activated;\n    },\n    \"in\": function _in(v, children, parents) {\n      var set = new Set();\n      if (v != null) {\n        var _iterator = _createForOfIteratorHelper(wrapInArray(v)),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var id = _step.value;\n            set = strategy.activate({\n              id: id,\n              value: true,\n              activated: new Set(set),\n              children: children,\n              parents: parents\n            });\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      return set;\n    },\n    out: function out(v) {\n      return Array.from(v);\n    }\n  };\n  return strategy;\n};\nexport var independentSingleActiveStrategy = function independentSingleActiveStrategy(mandatory) {\n  var parentStrategy = independentActiveStrategy(mandatory);\n  var strategy = {\n    activate: function activate(_ref2) {\n      var activated = _ref2.activated,\n        id = _ref2.id,\n        rest = _objectWithoutProperties(_ref2, _excluded);\n      id = toRaw(id);\n      var singleSelected = activated.has(id) ? new Set([id]) : new Set();\n      return parentStrategy.activate(_objectSpread(_objectSpread({}, rest), {}, {\n        id: id,\n        activated: singleSelected\n      }));\n    },\n    \"in\": function _in(v, children, parents) {\n      var set = new Set();\n      if (v != null) {\n        var arr = wrapInArray(v);\n        if (arr.length) {\n          set = parentStrategy[\"in\"](arr.slice(0, 1), children, parents);\n        }\n      }\n      return set;\n    },\n    out: function out(v, children, parents) {\n      return parentStrategy.out(v, children, parents);\n    }\n  };\n  return strategy;\n};\nexport var leafActiveStrategy = function leafActiveStrategy(mandatory) {\n  var parentStrategy = independentActiveStrategy(mandatory);\n  var strategy = {\n    activate: function activate(_ref3) {\n      var id = _ref3.id,\n        activated = _ref3.activated,\n        children = _ref3.children,\n        rest = _objectWithoutProperties(_ref3, _excluded2);\n      id = toRaw(id);\n      if (children.has(id)) return activated;\n      return parentStrategy.activate(_objectSpread({\n        id: id,\n        activated: activated,\n        children: children\n      }, rest));\n    },\n    \"in\": parentStrategy[\"in\"],\n    out: parentStrategy.out\n  };\n  return strategy;\n};\nexport var leafSingleActiveStrategy = function leafSingleActiveStrategy(mandatory) {\n  var parentStrategy = independentSingleActiveStrategy(mandatory);\n  var strategy = {\n    activate: function activate(_ref4) {\n      var id = _ref4.id,\n        activated = _ref4.activated,\n        children = _ref4.children,\n        rest = _objectWithoutProperties(_ref4, _excluded3);\n      id = toRaw(id);\n      if (children.has(id)) return activated;\n      return parentStrategy.activate(_objectSpread({\n        id: id,\n        activated: activated,\n        children: children\n      }, rest));\n    },\n    \"in\": parentStrategy[\"in\"],\n    out: parentStrategy.out\n  };\n  return strategy;\n};","map":{"version":3,"names":["toRaw","wrapInArray","independentActiveStrategy","mandatory","strategy","activate","_ref","id","value","activated","size","has","add","in","v","children","parents","set","Set","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","out","Array","from","independentSingleActiveStrategy","parentStrategy","_ref2","rest","_objectWithoutProperties","_excluded","singleSelected","_objectSpread","arr","length","slice","leafActiveStrategy","_ref3","_excluded2","leafSingleActiveStrategy","_ref4","_excluded3"],"sources":["../../../src/composables/nested/activeStrategies.ts"],"sourcesContent":["/* eslint-disable sonarjs/no-identical-functions */\n// Utilities\nimport { toRaw } from 'vue'\nimport { wrapInArray } from '@/util'\n\nexport type ActiveStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  activated: Set<unknown>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown>\n\nexport type ActiveStrategyTransformInFn = (\n  v: unknown | undefined,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => Set<unknown>\n\nexport type ActiveStrategyTransformOutFn = (\n  v: Set<unknown>,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => unknown\n\nexport type ActiveStrategy = {\n  activate: ActiveStrategyFn\n  in: ActiveStrategyTransformInFn\n  out: ActiveStrategyTransformOutFn\n}\n\nexport const independentActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const strategy: ActiveStrategy = {\n    activate: ({ id, value, activated }) => {\n      id = toRaw(id)\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value && activated.size === 1 && activated.has(id)) return activated\n\n      if (value) {\n        activated.add(id)\n      } else {\n        activated.delete(id)\n      }\n\n      return activated\n    },\n    in: (v, children, parents) => {\n      let set = new Set()\n\n      if (v != null) {\n        for (const id of wrapInArray(v)) {\n          set = strategy.activate({\n            id,\n            value: true,\n            activated: new Set(set),\n            children,\n            parents,\n          })\n        }\n      }\n\n      return set\n    },\n    out: v => {\n      return Array.from(v)\n    },\n  }\n\n  return strategy\n}\n\nexport const independentSingleActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ activated, id, ...rest }) => {\n      id = toRaw(id)\n      const singleSelected = activated.has(id) ? new Set([id]) : new Set()\n      return parentStrategy.activate({ ...rest, id, activated: singleSelected })\n    },\n    in: (v, children, parents) => {\n      let set = new Set()\n\n      if (v != null) {\n        const arr = wrapInArray(v)\n        if (arr.length) {\n          set = parentStrategy.in(arr.slice(0, 1), children, parents)\n        }\n      }\n\n      return set\n    },\n    out: (v, children, parents) => {\n      return parentStrategy.out(v, children, parents)\n    },\n  }\n\n  return strategy\n}\n\nexport const leafActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ id, activated, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return activated\n\n      return parentStrategy.activate({ id, activated, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const leafSingleActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentSingleActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ id, activated, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return activated\n\n      return parentStrategy.activate({ id, activated, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}